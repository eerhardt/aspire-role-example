@page "/counter"
@using Azure
@using Azure.Storage.Blobs
@using Azure.Storage.Blobs.Specialized
@using System.IO
@rendermode InteractiveServer
@inject BlobServiceClient BlobService

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

@if (@currentCount >= 0)
{
    <p role="status">Current count: @currentCount</p>
    
    <button class="btn btn-primary" @onclick="IncrementCountAsync">Click me</button>
}
else
{
    <p><em>Loading...</em></p>
}

@code {
    private int currentCount = -1;

    protected override async Task OnInitializedAsync()
    {
        await GetCurrentCount();
        await base.OnInitializedAsync();
    }

    private async Task IncrementCountAsync()
    {
        currentCount++;

        var blobClient = GetCounterBlobClientAsync();

        using (var stream = new MemoryStream())
        using (var writer = new StreamWriter(stream))
        {
            writer.Write(currentCount.ToString());
            writer.Flush();
            stream.Position = 0;
            await blobClient.UploadAsync(stream, overwrite: true);
        }
    }

    private async Task GetCurrentCount()
    {
        var blobClient = GetCounterBlobClientAsync();

        try
        {
            var contentResult = await blobClient.DownloadContentAsync();
            currentCount = contentResult.Value.Content.ToObjectFromJson<int>();
        }
        catch (RequestFailedException ex) when (ex.Status == 404)
        {
            await blobClient.GetParentBlobContainerClient().CreateIfNotExistsAsync();

            currentCount = 0;
        }
    }

    private BlobClient GetCounterBlobClientAsync() =>
        BlobService.GetBlobContainerClient("role-example").GetBlobClient("counter");
}
